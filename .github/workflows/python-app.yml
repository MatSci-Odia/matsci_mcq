name: Matsci Test Generator

on:
  push:
    branches: [ "test" ]
  pull_request:
    branches: [ "test" ]
  workflow_dispatch:
    inputs:
      script:
        description: 'Select script to run'
        required: true
        default: 'matsci_mcq.py'
        type: choice
        options:
          - matsci_mcq.py
          - subjective_test.py
      input_file:
        description: 'Path to input JSON (e.g., resources/programming_fundamentals.json)'
        required: true
        default: 'resources/physics_test.json'

permissions:
  contents: read
  issues: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          flake8 . --exit-zero

      - name: Run selected script and generate document
        run: |
          python3 ${{ github.event.inputs.script }} ${{ github.event.inputs.input_file }}

      - name: Upload .docx as artifact
        uses: actions/upload-artifact@v4
        with:
          name: mcq-doc
          path: "*.docx"
          retention-days: 7

      - name: Create GitHub issue with artifact info
        uses: actions/github-script@v7
        with:
          script: |
            const runId = process.env.GITHUB_RUN_ID;
            const repoOwner = context.repo.owner;
            const repoName = context.repo.repo;
            const artifactUrl = `https://github.com/${repoOwner}/${repoName}/actions/runs/${runId}`;

            github.rest.issues.create({
              owner: repoOwner,
              repo: repoName,
              title: "üìù Document Generated",
              body: `A new document was generated using \`${{ github.event.inputs.script }}\` and input file \`${{ github.event.inputs.input_file }}\`.\n\nüîó [Download the document here](${artifactUrl})\n\n‚öôÔ∏è Triggered by: @${context.actor}`
            });
